import textwrap

class Usuario:
    def __init__(self, nome, cpf, data_nascimento, endereco):
        self.nome = nome
        self.cpf = cpf
        self.data_nascimento = data_nascimento
        self.endereco = endereco

class ContaBancaria:
    AGENCIA_PADRAO = "0001"

    def __init__(self, numero_conta, usuario):
        self.numero_conta = numero_conta
        self.usuario = usuario
        self.agencia = ContaBancaria.AGENCIA_PADRAO
        self.saldo = 0.0
        self.limite_saque = 500.0
        self.extrato = []
        self.saques_diarios = 0
        self.LIMITE_SAQUES = 3

    def depositar(self, valor):
        if valor > 0:
            self.saldo += valor
            self.extrato.append(f"Depósito: R$ {valor:.2f}")
            print("Depósito realizado com sucesso.")
        else:
            print("Valor inválido. Informe um valor positivo.")

    def sacar(self, valor):
        if self.saques_diarios >= self.LIMITE_SAQUES:
            print("Limite diário de saques atingido.")
            return
        if valor > self.saldo:
            print("Saldo insuficiente.")
        elif valor > self.limite_saque:
            print(f"Limite máximo por saque é de R$ {self.limite_saque:.2f}.")
        elif valor <= 0:
            print("Valor inválido.")
        else:
            self.saldo -= valor
            self.extrato.append(f"Saque:    R$ {valor:.2f}")
            self.saques_diarios += 1
            print("Saque realizado com sucesso.")

    def mostrar_extrato(self):
        print(f"\n--- Extrato da conta {self.numero_conta} - {self.usuario.nome} ---")
        if not self.extrato:
            print("Não foram realizadas movimentações.")
        else:
            for operacao in self.extrato:
                print(operacao)
        print(f"\nSaldo atual: R$ {self.saldo:.2f}")

class Banco:
    def __init__(self):
        self.usuarios = []
        self.contas = []
        self.numero_conta_seq = 1

    def buscar_usuario_por_cpf(self, cpf):
        for usuario in self.usuarios:
            if usuario.cpf == cpf:
                return usuario
        return None

    def criar_usuario(self):
        cpf = input("Informe o CPF (somente números): ")
        if self.buscar_usuario_por_cpf(cpf):
            print("Usuário com esse CPF já existe.")
            return

        nome = input("Informe o nome completo: ")
        data_nascimento = input("Informe a data de nascimento (dd-mm-aaaa): ")
        endereco = input("Informe o endereço (logradouro, nro - bairro - cidade/estado): ")
        usuario = Usuario(nome, cpf, data_nascimento, endereco)
        self.usuarios.append(usuario)
        print("Usuário criado com sucesso.")

    def criar_conta(self):
        cpf = input("Informe o CPF do titular da conta: ")
        usuario = self.buscar_usuario_por_cpf(cpf)
        if not usuario:
            print("Usuário não encontrado. Crie o usuário primeiro.")
            return

        conta = ContaBancaria(self.numero_conta_seq, usuario)
        self.contas.append(conta)
        print(f"Conta criada com sucesso! Número da conta: {self.numero_conta_seq}")
        self.numero_conta_seq += 1

    def listar_contas(self):
        if not self.contas:
            print("Nenhuma conta cadastrada.")
            return

        for conta in self.contas:
            info = f"""
Agência:\t{conta.agencia}
Conta:\t\t{conta.numero_conta}
Titular:\t{conta.usuario.nome}
CPF:\t\t{conta.usuario.cpf}
"""
            print("="*40)
            print(textwrap.dedent(info))

    def selecionar_conta(self):
        if not self.contas:
            print("Nenhuma conta cadastrada.")
            return None
        numero = int(input("Informe o número da conta: "))
        for conta in self.contas:
            if conta.numero_conta == numero:
                return conta
        print("Conta não encontrada.")
        return None

def menu_principal():
    print(textwrap.dedent("""
    --- Banco Python ---
    1 - Criar novo usuário
    2 - Criar nova conta
    3 - Listar contas
    4 - Acessar conta
    5 - Sair
    """))

def menu_conta(nome):
    print(textwrap.dedent(f"""
    --- Conta de {nome} ---
    1 - Depositar
    2 - Sacar
    3 - Ver Extrato
    4 - Voltar ao menu principal
    """))

def main():
    banco = Banco()

    while True:
        menu_principal()
        opcao = input("Escolha uma opção: ")

        if opcao == "1":
            banco.criar_usuario()

        elif opcao == "2":
            banco.criar_conta()

        elif opcao == "3":
            banco.listar_contas()

        elif opcao == "4":
            conta = banco.selecionar_conta()
            if conta is None:
                continue

            while True:
                menu_conta(conta.usuario.nome)
                opc = input("Escolha uma opção: ")

                if opc == "1":
                    valor = float(input("Valor para depósito: R$ "))
                    conta.depositar(valor)

                elif opc == "2":
                    valor = float(input("Valor para saque: R$ "))
                    conta.sacar(valor)

                elif opc == "3":
                    conta.mostrar_extrato()

                elif opc == "4":
                    break

                else:
                    print("Opção inválida. Tente novamente.")

        elif opcao == "5":
            print("Obrigado por usar o Banco Python. Até logo!")
            break

        else:
            print("Opção inválida. Tente novamente.")

if __name__ == "__main__":
    main()
